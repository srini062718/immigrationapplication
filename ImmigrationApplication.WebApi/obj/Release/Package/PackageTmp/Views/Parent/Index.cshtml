@using ImmigrationApplication.DataAccess
@model IEnumerable<ImmigrationApplication.Model.Parent>
@@* ReSharper disable once PossibleNullReferenceException *@
@Html.Partial("~/Views/Shared/_navbar.cshtml", new ViewDataDictionary { { "PersonID", Model.FirstOrDefault().PersonID } })
<p>
    @{
        var endy = new EncryptAndDecrypt();
        // ReSharper disable once PossibleNullReferenceException
        var pid = endy.EncryptToBase64(Model.FirstOrDefault().PersonID);
    }
    @Html.ActionLink("Create New", "Create", new { personId = pid })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateofBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityofBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CityofResidence)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Relationship)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Person.LastName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateofBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CityofBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CityofResidence)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Relationship)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Person.LastName)
        </td>
        <td>
            @{
                EncryptAndDecrypt encdyc = new EncryptAndDecrypt();
                string personid = encdyc.EncryptToBase64((item.PersonID));
            }
            @Html.ActionLink("Edit", "Edit", new {id = personid }) |
            @Html.ActionLink("Details", "Details", new {id = personid }) 
        </td>
    </tr>
}

</table>
