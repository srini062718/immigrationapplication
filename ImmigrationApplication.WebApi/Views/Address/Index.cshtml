@model IEnumerable<ImmigrationApplication.Model.Address>
@using ImmigrationApplication.DataAccess
<style>
    dt, dd {
        padding-bottom: 10px;
    }
</style>

@* ReSharper disable once PossibleNullReferenceException *@
@Html.Partial("~/Views/Shared/_navbar.cshtml", new ViewDataDictionary {{ "PersonID", Model.FirstOrDefault().PersonID}})
<p>
    @{
        var endy = new EncryptAndDecrypt();
        // ReSharper disable once PossibleNullReferenceException
        var pid =  endy.EncryptToBase64( Model.FirstOrDefault().PersonID);
    }
    @Html.ActionLink("Create New", "Create", new {personid = pid })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Address1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Address1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Country)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @{
                var encdyc = new EncryptAndDecrypt();
                var addid = encdyc.EncryptToBase64(item.AddressID);
            }
            @Html.ActionLink("Edit", "Edit", new {addressid = addid }) |
            @Html.ActionLink("Details", "Details", new {addressid = addid }) 
        </td>
    </tr>
}
</table>
