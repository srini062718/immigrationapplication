@using ImmigrationApplication.DataAccess
@model IEnumerable<ImmigrationApplication.Model.PreviousApplication>
@* ReSharper disable once PossibleNullReferenceException *@
@Html.Partial("~/Views/Shared/_navbar.cshtml", new ViewDataDictionary { { "PersonID", Model.FirstOrDefault().PersonID } })
<p>
    @{
        var endy = new EncryptAndDecrypt();
        // ReSharper disable once PossibleNullReferenceException
        var pid = endy.EncryptToBase64(Model.FirstOrDefault().PersonID);
    }
    @Html.ActionLink("Create New", "Create", new { personid = pid })
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ApplicationType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateApplied)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StatusGranted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IndicateIfDenied)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CapGap)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicationType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateApplied)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StatusGranted)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IndicateIfDenied)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CapGap)
        </td>
      
        <td>
            @{
                var encdyc = new EncryptAndDecrypt();
                var pied = encdyc.EncryptToBase64(item.PreviousApplicationID);
            }
            @Html.ActionLink("Edit", "Edit", new {previousappid = pied }) |
            @Html.ActionLink("Details", "Details", new {previousappid = pied })
        </td>
    </tr>
}
</table>
